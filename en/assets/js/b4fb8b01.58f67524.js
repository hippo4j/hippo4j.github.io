"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3028],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(g,i(i({ref:n},s),{},{components:t})):r.createElement(g,i({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6244:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:1},i="\u63a5\u5165\u6d41\u7a0b",c={unversionedId:"user_docs/getting_started/config/hippo4j-config-start",id:"version-1.4.2/user_docs/getting_started/config/hippo4j-config-start",title:"\u63a5\u5165\u6d41\u7a0b",description:"Nacos\u3001Apollo\u3001Zookeeper\u3001ETCD\u3001Polaris \u914d\u7f6e\u4e2d\u5fc3\u4efb\u9009\u5176\u4e00\u3002",source:"@site/versioned_docs/version-1.4.2/user_docs/getting_started/config/hippo4j-config-start.md",sourceDirName:"user_docs/getting_started/config",slug:"/user_docs/getting_started/config/hippo4j-config-start",permalink:"/en/docs/1.4.2/user_docs/getting_started/config/hippo4j-config-start",draft:!1,tags:[],version:"1.4.2",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"user_docs",previous:{title:"\u8fd0\u884c\u6a21\u5f0f\u4ecb\u7ecd",permalink:"/en/docs/1.4.2/user_docs/getting_started/difference"},next:{title:"\u7ebf\u7a0b\u6c60\u76d1\u63a7",permalink:"/en/docs/1.4.2/user_docs/getting_started/config/hippo4j-config-monitor"}},l={},p=[{value:"hippo4j \u914d\u7f6e",id:"hippo4j-\u914d\u7f6e",level:2},{value:"ThreadPoolExecutor \u9002\u914d",id:"threadpoolexecutor-\u9002\u914d",level:2}],s={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u63a5\u5165\u6d41\u7a0b"},"\u63a5\u5165\u6d41\u7a0b"),(0,o.kt)("p",null,"Nacos\u3001Apollo\u3001Zookeeper\u3001ETCD\u3001Polaris \u914d\u7f6e\u4e2d\u5fc3\u4efb\u9009\u5176\u4e00\u3002"),(0,o.kt)("h2",{id:"hippo4j-\u914d\u7f6e"},"hippo4j \u914d\u7f6e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>cn.hippo4j</groupId>\n    <artifactId>hippo4j-config-spring-boot-starter</artifactId>\n    <version>1.4.2</version>\n</dependency>\n")),(0,o.kt)("p",null,"\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0\u6ce8\u89e3 ",(0,o.kt)("inlineCode",{parentName:"p"},"@EnableDynamicThreadPool"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"@SpringBootApplication\n@EnableDynamicThreadPool\npublic class ExampleApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(ExampleApplication.class, args);\n    }\n}\n")),(0,o.kt)("p",null,"SpringBoot \u5e94\u7528\u914d\u7f6e\u6587\u4ef6\u6dfb\u52a0\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"server:\n  port: 8090\n  servlet:\n    context-path: /example\n\nspring:\n  profiles:\n    active: dev\n\n  dynamic:\n    thread-pool:\n      # \u662f\u5426\u5f00\u542f\u52a8\u6001\u7ebf\u7a0b\u6c60\n      enable: true\n      # \u662f\u5426\u6253\u5370 banner\n      banner: true\n      # \u662f\u5426\u5f00\u542f\u7ebf\u7a0b\u6c60\u6570\u636e\u91c7\u96c6\uff0c\u5bf9\u63a5 Micrometer\u3001ES\u3001Log \u7b49\n      collect: true\n      # \u68c0\u67e5\u7ebf\u7a0b\u6c60\u72b6\u6001\uff0c\u662f\u5426\u8fbe\u5230\u62a5\u8b66\u6761\u4ef6\uff0c\u5355\u4f4d\u6beb\u79d2\n      check-state-interval: 3000\n      # \u901a\u77e5\u62a5\u8b66\u5e73\u53f0\uff0c\u8bf7\u66ff\u6362\u4e3a\u81ea\u5df1\u521b\u5efa\u7684\u7fa4\u673a\u5668\u4eba\n      notify-platforms:\n        - platform: 'WECHAT'\n          token: xxx\n        - platform: 'DING'\n          token: xxx\n          secret: xxx  # \u52a0\u7b7e\u4e13\u5c5e\n        - platform: 'LARK'\n          token: xxx\n      # Nacos\u3001Apollo\u3001Zookeeper\u3001ETCD\u3001Polaris \u4efb\u9009\u5176\u4e00\n      nacos:\n        data-id: xxx\n        group: xxx\n      apollo:\n        namespace: xxxx\n      # \u914d\u7f6e\u4e2d\u5fc3\u6587\u4ef6\u683c\u5f0f\n      config-file-type: yml\n      # tomcat\u3001undertow\u3001jetty \u4e09\u79cd\u5bb9\u5668\u7ebf\u7a0b\u6c60\uff0c\u4efb\u9009\u5176\u4e00\n      undertow:\n        core-pool-size: 100\n        maximum-pool-size: 200\n        keep-alive-time: 1000\n      # \u5168\u5c40\u901a\u77e5\u914d\u7f6e-\u662f\u5426\u62a5\u8b66\n      alarm: true\n      # \u6d3b\u8dc3\u5ea6\u62a5\u8b66\u9608\u503c\uff1b\u5047\u8bbe\u7ebf\u7a0b\u6c60\u6700\u5927\u7ebf\u7a0b\u6570 10\uff0c\u5f53\u7ebf\u7a0b\u6570\u8fbe\u5230 8 \u53d1\u8d77\u62a5\u8b66\n      active-alarm: 80\n      # \u5bb9\u91cf\u62a5\u8b66\u9608\u503c\uff1b\u5047\u8bbe\u963b\u585e\u961f\u5217\u5bb9\u91cf 100\uff0c\u5f53\u5bb9\u91cf\u8fbe\u5230 80 \u53d1\u8d77\u62a5\u8b66\n      capacity-alarm: 80\n      # \u62a5\u8b66\u95f4\u9694\uff0c\u540c\u4e00\u7ebf\u7a0b\u6c60\u4e0b\u540c\u4e00\u62a5\u8b66\u7eac\u5ea6\uff0c\u5728 interval \u65f6\u95f4\u5185\u53ea\u4f1a\u62a5\u8b66\u4e00\u6b21\uff0c\u5355\u4f4d\u79d2\n      alarm-interval: 8\n      # \u4f01\u4e1a\u5fae\u4fe1\u586b\u5199\u7528\u6237 ID\uff08\u586b\u5199\u5176\u5b83\u5c06\u65e0\u6cd5\u8fbe\u5230 @ \u6548\u679c\uff09\u3001\u9489\u9489\u586b\u624b\u673a\u53f7\u3001\u98de\u4e66\u586b ou_ \u5f00\u5934\u552f\u4e00 ID\n      receives: xxx\n      # \u52a8\u6001\u7ebf\u7a0b\u6c60\u5217\u8868\n      executors:\n        - thread-pool-id: 'message-consume'\n          # \u6838\u5fc3\u7ebf\u7a0b\u6570\n          core-pool-size: 1\n          # \u6700\u5927\u7ebf\u7a0b\u6570\n          maximum-pool-size: 1\n          # \u963b\u585e\u961f\u5217\u540d\u79f0\uff0c\u53c2\u8003 BlockingQueueTypeEnum\uff0c\u652f\u6301 SPI\n          blocking-queue: 'LinkedBlockingQueue'\n          # \u963b\u585e\u961f\u5217\u5927\u5c0f\n          queue-capacity: 1\n          # \u6267\u884c\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u8fc7\u6b64\u65f6\u95f4\u53d1\u8d77\u62a5\u8b66\uff0c\u5355\u4f4d\u6beb\u79d2\n          execute-time-out: 1000\n          # \u62d2\u7edd\u7b56\u7565\u540d\u79f0\uff0c\u53c2\u8003 RejectedPolicyTypeEnum\uff0c\u652f\u6301 SPI\n          rejected-handler: 'AbortPolicy'\n          # \u7ebf\u7a0b\u5b58\u6d3b\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2\n          keep-alive-time: 1024\n          # \u662f\u5426\u5141\u8bb8\u6838\u5fc3\u7ebf\u7a0b\u8d85\u65f6\n          allow-core-thread-time-out: true\n          # \u7ebf\u7a0b\u5de5\u5382\u540d\u79f0\u524d\u7f00\n          thread-name-prefix: 'message-consume'\n          # \u662f\u5426\u62a5\u8b66\n          alarm: true\n          # \u6d3b\u8dc3\u5ea6\u62a5\u8b66\u9608\u503c\uff1b\u5047\u8bbe\u7ebf\u7a0b\u6c60\u6700\u5927\u7ebf\u7a0b\u6570 10\uff0c\u5f53\u7ebf\u7a0b\u6570\u8fbe\u5230 8 \u53d1\u8d77\u62a5\u8b66\n          active-alarm: 80\n          # \u5bb9\u91cf\u62a5\u8b66\u9608\u503c\uff1b\u5047\u8bbe\u963b\u585e\u961f\u5217\u5bb9\u91cf 100\uff0c\u5f53\u5bb9\u91cf\u8fbe\u5230 80 \u53d1\u8d77\u62a5\u8b66\n          capacity-alarm: 80\n          # \u901a\u77e5\u914d\u7f6e\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u901a\u77e5\u914d\u7f6e\u5982\u679c\u5b58\u5728\uff0c\u5219\u4f1a\u8986\u76d6\u5168\u5c40\u901a\u77e5\u914d\u7f6e\n          notify:\n            # \u62a5\u8b66\u95f4\u9694\uff0c\u540c\u4e00\u7ebf\u7a0b\u6c60\u4e0b\u540c\u4e00\u62a5\u8b66\u7eac\u5ea6\uff0c\u5728 interval \u65f6\u95f4\u5185\u53ea\u4f1a\u62a5\u8b66\u4e00\u6b21\uff0c\u5355\u4f4d\u5206\u949f\n            interval: 8\n            # \u4f01\u4e1a\u5fae\u4fe1\u586b\u5199\u7528\u6237 ID\uff08\u586b\u5199\u5176\u5b83\u5c06\u65e0\u6cd5\u8fbe\u5230 @ \u6548\u679c\uff09\u3001\u9489\u9489\u586b\u624b\u673a\u53f7\u3001\u98de\u4e66\u586b ou_ \u5f00\u5934\u552f\u4e00 ID\n            receives: xxx\n        - thread-pool-id: 'message-produce'\n          core-pool-size: 1\n          maximum-pool-size: 1\n          queue-capacity: 1\n          execute-time-out: 1000\n          blocking-queue: 'LinkedBlockingQueue'\n          rejected-handler: 'AbortPolicy'\n          keep-alive-time: 1024\n          allow-core-thread-time-out: true\n          thread-name-prefix: 'message-consume'\n          alarm: true\n          active-alarm: 80\n          capacity-alarm: 80\n          notify:\n            interval: 8\n            receives: xxx\n")),(0,o.kt)("h2",{id:"threadpoolexecutor-\u9002\u914d"},"ThreadPoolExecutor \u9002\u914d"),(0,o.kt)("p",null,"\u6dfb\u52a0\u7ebf\u7a0b\u6c60\u914d\u7f6e\u7c7b\uff0c\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"@DynamicThreadPool")," \u6ce8\u89e3\u4fee\u9970\u3002",(0,o.kt)("inlineCode",{parentName:"p"},"threadPoolId")," \u4e3a\u670d\u52a1\u7aef\u521b\u5efa\u7684\u7ebf\u7a0b\u6c60 ID\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package cn.hippo4j.example;\n\nimport cn.hippo4j.core.executor.DynamicThreadPool;\nimport cn.hippo4j.core.executor.support.ThreadPoolBuilder;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport java.util.concurrent.ThreadPoolExecutor;\n\n@Configuration\npublic class ThreadPoolConfig {\n\n    @Bean\n    @DynamicThreadPool\n    public ThreadPoolExecutor messageConsumeDynamicExecutor() {\n        String threadPoolId = "message-consume";\n        ThreadPoolExecutor messageConsumeDynamicExecutor = ThreadPoolBuilder.builder()\n                .threadFactory(threadPoolId)\n                .threadPoolId(threadPoolId)\n                .dynamicPool()\n                .build();\n        return messageConsumeDynamicExecutor;\n    }\n\n    @Bean\n    @DynamicThreadPool\n    public ThreadPoolExecutor messageProduceDynamicExecutor() {\n        String threadPoolId = "message-produce";\n        ThreadPoolExecutor messageProduceDynamicExecutor = ThreadPoolBuilder.builder()\n                .threadFactory(threadPoolId)\n                .threadPoolId(threadPoolId)\n                .dynamicPool()\n                .build();\n        return messageProduceDynamicExecutor;\n    }\n\n}\n')),(0,o.kt)("p",null,"\u901a\u8fc7 ThreadPoolBuilder \u6784\u5efa\u52a8\u6001\u7ebf\u7a0b\u6c60\uff0c\u53ea\u6709 threadFactory\u3001threadPoolId \u4e3a\u5fc5\u586b\u9879\uff0c\u5176\u5b83\u53c2\u6570\u4f1a\u4ece\u914d\u7f6e\u4e2d\u5fc3\u62c9\u53d6\u3002"),(0,o.kt)("p",null,"\u9879\u76ee\u4e2d\u4f7f\u7528\u4e0a\u8ff0\u5b9a\u4e49\u7684\u52a8\u6001\u7ebf\u7a0b\u6c60\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"@Resource\nprivate ThreadPoolExecutor messageConsumeDynamicExecutor;\n\nmessageConsumeDynamicExecutor.execute(() -> xxx);\n\n@Resource\nprivate ThreadPoolExecutor messageProduceDynamicExecutor;\n\nmessageProduceDynamicExecutor.execute(() -> xxx);\n")))}d.isMDXComponent=!0}}]);